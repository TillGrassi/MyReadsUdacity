{"ast":null,"code":"var _jsxFileName = \"/Users/davidrajchercodaisseur/masterschool/students/books_library_till_gra\\xDFmann/myreads/starter/src/views/Search.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { search } from \"../BooksAPI\";\nimport Book from \"../components/Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  deleteBook,\n  updateCurrentlyReading,\n  updateWantToRead,\n  updateRead,\n  currentShelf,\n  updateCurrentShelf\n}) => {\n  _s();\n\n  //get data from api\n  const [showSearch, setShowSearch] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const updateSearchValue = searchValue => {\n    setSearchValue(searchValue);\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (searchValue !== \"\") {\n      search(searchValue, 20).then(items => {\n        if (mounted) {\n          setShowSearch(items);\n        }\n      }).catch(error => console.log(error));\n    }\n\n    if (searchValue === \"\") {\n      setShowSearch([]);\n    }\n\n    return () => mounted = false;\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: searchValue,\n          onChange: event => updateSearchValue(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: showSearch.length > 0 ? showSearch.map(book => /*#__PURE__*/_jsxDEV(Book, {\n          title: book.title,\n          authors: book.authors,\n          image: book.imageLinks.thumbnail,\n          currentShelf: currentShelf,\n          updateCurrentShelf: shelf => updateCurrentShelf(shelf),\n          deleteBook: () => deleteBook(),\n          updateCurrentlyReading: () => updateCurrentlyReading(book),\n          updateWantToRead: () => updateWantToRead(book),\n          updateRead: () => updateRead(book)\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Books to show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"vGHbtO6JzCP3eqX+8uzvVxrFz/Q=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/davidrajchercodaisseur/masterschool/students/books_library_till_graÃŸmann/myreads/starter/src/views/Search.js"],"names":["Link","useEffect","useState","search","Book","Search","deleteBook","updateCurrentlyReading","updateWantToRead","updateRead","currentShelf","updateCurrentShelf","showSearch","setShowSearch","searchValue","setSearchValue","updateSearchValue","mounted","then","items","catch","error","console","log","event","target","value","length","map","book","title","authors","imageLinks","thumbnail","shelf","id"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { search } from \"../BooksAPI\";\nimport Book from \"../components/Book\";\n\nconst Search = ({\n  deleteBook,\n  updateCurrentlyReading,\n  updateWantToRead,\n  updateRead,\n  currentShelf,\n  updateCurrentShelf,\n}) => {\n  //get data from api\n  const [showSearch, setShowSearch] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const updateSearchValue = (searchValue) => {\n    setSearchValue(searchValue);\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (searchValue !== \"\") {\n      search(searchValue, 20)\n        .then((items) => {\n          if (mounted) {\n            setShowSearch(items);\n          }\n        })\n        .catch((error) => console.log(error));\n    }\n    if (searchValue === \"\") {\n      setShowSearch([]);\n    }\n\n    return () => (mounted = false);\n  }, [searchValue]);\n\n  return (\n    <div className='search-books'>\n      <div className='search-books-bar'>\n        <Link to='/' className='close-search'>\n          Close\n        </Link>\n        <div className='search-books-input-wrapper'>\n          <input\n            type='text'\n            placeholder='Search by title, author, or ISBN'\n            value={searchValue}\n            onChange={(event) => updateSearchValue(event.target.value)}\n          />\n        </div>\n      </div>\n      <div className='search-books-results'>\n        <ol className='books-grid'>\n          {showSearch.length > 0 ? (\n            showSearch.map((book) => (\n              <Book\n                key={book.id}\n                title={book.title}\n                authors={book.authors}\n                image={book.imageLinks.thumbnail}\n                currentShelf={currentShelf}\n                updateCurrentShelf={(shelf) => updateCurrentShelf(shelf)}\n                deleteBook={() => deleteBook()}\n                updateCurrentlyReading={() => updateCurrentlyReading(book)}\n                updateWantToRead={() => updateWantToRead(book)}\n                updateRead={() => updateRead(book)}\n              />\n            ))\n          ) : (\n            <p>No Books to show</p>\n          )}\n        </ol>\n      </div>\n    </div>\n  );\n};\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}