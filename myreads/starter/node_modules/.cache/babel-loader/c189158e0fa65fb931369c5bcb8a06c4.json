{"ast":null,"code":"var _jsxFileName = \"/Users/davidrajchercodaisseur/masterschool/students/books_library_till_gra\\xDFmann/myreads/starter/src/views/Search.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { search } from \"../BooksAPI.js\";\nimport Book from \"../Components/Book.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  deleteBook,\n  updateCurrentlyReading,\n  updateWantToRead,\n  updateRead,\n  currentShelf,\n  updateCurrentShelf\n}) => {\n  _s();\n\n  //get data from api\n  const [showSearch, setShowSearch] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const updateSearchValue = searchValue => {\n    setSearchValue(searchValue);\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (searchValue !== \"\") {\n      search(searchValue, 20).then(items => {\n        if (mounted) {\n          setShowSearch(items);\n        }\n      }).catch(error => console.log(error));\n    }\n\n    if (searchValue === \"\") {\n      setShowSearch([]);\n    }\n\n    return () => mounted = false;\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: searchValue,\n          onChange: event => updateSearchValue(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: showSearch.length > 0 ? showSearch.map(book => /*#__PURE__*/_jsxDEV(Book, {\n          title: book.title,\n          authors: book.authors,\n          image: book.imageLinks.thumbnail,\n          currentShelf: currentShelf,\n          updateCurrentShelf: shelf => updateCurrentShelf(shelf),\n          deleteBook: () => deleteBook(),\n          updateCurrentlyReading: () => updateCurrentlyReading(book),\n          updateWantToRead: () => updateWantToRead(book),\n          updateRead: () => updateRead(book)\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Books to show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Search, \"vGHbtO6JzCP3eqX+8uzvVxrFz/Q=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/davidrajchercodaisseur/masterschool/students/books_library_till_graÃŸmann/myreads/starter/src/views/Search.js"],"names":["Link","useEffect","useState","search","Book","Search","deleteBook","updateCurrentlyReading","updateWantToRead","updateRead","currentShelf","updateCurrentShelf","showSearch","setShowSearch","searchValue","setSearchValue","updateSearchValue","mounted","then","items","catch","error","console","log","event","target","value","length","map","book","title","authors","imageLinks","thumbnail","shelf","id"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { search } from \"../BooksAPI.js\";\nimport Book from \"../Components/Book.js\";\n\nconst Search = ({deleteBook,  updateCurrentlyReading, updateWantToRead, updateRead, currentShelf, updateCurrentShelf}) => {\n\n  //get data from api\n  const [showSearch, setShowSearch] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const updateSearchValue = (searchValue) => {\n    setSearchValue(searchValue)\n  };\n\n  useEffect(() => {\n\n    let mounted = true;\n\n    if(searchValue !== \"\"){\n      search(searchValue, 20)\n      .then(items => {\n        if(mounted) {\n          setShowSearch(items)\n        }\n      })\n      .catch((error) => console.log(error))\n    }\n    if(searchValue === \"\"){setShowSearch([])}\n      \n  return () => mounted = false;\n  }, [searchValue])\n  \n\n  return(\n     <div className=\"search-books\">\n       <div className=\"search-books-bar\">\n         <Link to=\"/\" className=\"close-search\">\n           Close\n         </Link>\n         <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title, author, or ISBN\"\n            value={searchValue}\n            onChange={(event) => updateSearchValue(event.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n         <ol className=\"books-grid\">\n          {showSearch.length>0 ? showSearch.map((book) => \n          <Book \n          key={book.id}\n          title={book.title} \n          authors={book.authors} \n          image={book.imageLinks.thumbnail}\n          currentShelf={currentShelf}\n          updateCurrentShelf={(shelf) => updateCurrentShelf(shelf)}\n          deleteBook={() => deleteBook()}\n          updateCurrentlyReading={() => updateCurrentlyReading(book)}\n          updateWantToRead={() => updateWantToRead(book)}\n          updateRead={() => updateRead(book)}/>) : <p>No Books to show</p>}\n         </ol>\n       </div>\n     </div>\n  )\n}\nexport default Search;"]},"metadata":{},"sourceType":"module"}